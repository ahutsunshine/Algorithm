package com.algorithm.leetcode.common;

import java.util.HashMap;
import java.util.Map;

/**
 * Given two strings s and t which consist of only lowercase letters.
 *
 * String t is generated by random shuffling string s and then add one more letter at a random position.
 *
 * Find the letter that was added in t.
 *
 * Example:
 *
 * Input:
 * s = "abcd"
 * t = "abcde"
 *
 * Output:
 * e
 *
 * Explanation:
 * 'e' is the letter that was added.
 */

public class _389_FindTheDifference {
    public static void main(String[] args) {
        String s = "abcd", t = "abcde";
        assert findTheDifference1(s, t) == 'e';
        assert findTheDifference2(s, t) == 'e';
        assert findTheDifference3(s,t) == 'e';

    }

    public static char findTheDifference1(String s, String t) {
        if(s == null || t == null ) return ' ';
        Map<Character, Integer> map = new HashMap<>();
        for(char c : s.toCharArray()){
            int count = map.containsKey(c) ? map.get(c) + 1 : 1;
            map.put(c, count);
        }
        for(char c : t.toCharArray()){
            if(!map.containsKey(c) || map.get(c) == 0){
                return c;
            }
            map.put(c, map.get(c) - 1);
        }
        return ' ';
    }

    public static char findTheDifference2(String s, String t) {
        if(s == null || t == null || s.length() != t.length() - 1) return ' ';
        char c = t.charAt(t.length() - 1);
        for(int i = 0;i < s.length();i++){
            c ^= s.charAt(i);
            c ^= t.charAt(i);
        }
        return c;
    }

    public static char findTheDifference3(String s, String t) {
        if(s == null || t == null || s.length() != t.length() - 1) return ' ';
        int c = t.charAt(t.length() - 1);
        for(int i = 0;i < s.length();i++){
            c -= s.charAt(i);
            c += t.charAt(i);
        }
        return (char) c;
    }
}
